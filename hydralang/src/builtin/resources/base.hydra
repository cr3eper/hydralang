
# Derivatives of sums need to be handled
df(a + b, x) = df(a, x) + df(b, x)
df(a - b, x) = df(a, x) - df(b, x)

# Derivate of a constant is Zero
df(c, x) = 0 where { not(contains(c, x)) }

# Product rule definition
df(a * b, x) = df(a, x) * b + df(b, x) * a where { contains(a, x), contains(b, x) }

# Quotient rule
df(a / b, x) = (b * df(a, x) - a * df(b, x)) / b^2 where { contains(a, x), contains(b, x) }

# Basic power rule differentiation 
df(a * x ^ n, x) = (a * n) * x^(n-1) where { not(contains(a, x)), not(contains(n, x)) }
df(x ^ n, x) = df(1 * x ^ n, x) where { not(contains(n, x)) }
df(a * x, x) = a where { not(contains(a, x)) }

